{"version":3,"sources":["webpack:///./src/app/models/employee.ts","webpack:///./src/app/services/employee.service.ts","webpack:///./src/app/tabs/tab4/tab4.module.ts","webpack:///./src/app/tabs/tab4/tab4.page.html","webpack:///./src/app/tabs/tab4/tab4.page.scss","webpack:///./src/app/tabs/tab4/tab4.page.ts"],"names":[],"mappings":"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","file":"tabs-tab4-tab4-module.js","sourcesContent":["export class Employee {\n\n    constructor(_id = '', name = '', position = '', office = '', salary = 0) {\n        this._id = _id;\n        this.name = name;\n        this.position = position;\n        this.office = office;\n        this.salary = salary;\n    }\n\n    _id: string;\n    name: string;\n    position: string;\n    office: string;\n    salary: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Employee } from '../models/employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  selectedEmployee: Employee;\n  employees: Employee[];\n  \n  readonly URL_API = 'http://localhost:3000/api/employees';\n\n  constructor(private http: HttpClient) {\n    this.selectedEmployee = new Employee();\n  }\n\n  postEmployee(employee: Employee) {\n    return this.http.post(this.URL_API, employee);\n  }\n\n  getEmployees() {\n    return this.http.get(this.URL_API);\n  }\n\n  putEmployee(employee: Employee) {\n    return this.http.put(this.URL_API + `/${employee._id}`, employee);\n  }\n\n  deleteEmployee(_id: string) {\n    return this.http.delete(this.URL_API + `/${_id}`);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Tab4Page } from './tab4.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab4Page\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [Tab4Page]\n})\nexport class Tab4PageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button [routerLink]=\\\"['/new-task']\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Mensajes</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card>\\n      <form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"addEmployee(employeeForm)\\\">\\n        <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee._id\\\">\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Nombre:</ion-label>\\n          <ion-input type=\\\"text\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.name\\\" placeholder=\\\"Enter your FullName\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label position=\\\"stacked\\\">Puesto:</ion-label>\\n            <ion-input type=\\\"text\\\" name=\\\"position\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.position\\\" placeholder=\\\"Enter your Position\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label position=\\\"stacked\\\">Empresa:</ion-label>\\n            <ion-input type=\\\"text\\\" name=\\\"office\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.office\\\" placeholder=\\\"Enter your Office\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label position=\\\"stacked\\\">Salario:</ion-label>\\n            <ion-input type=\\\"text\\\" name=\\\"salary\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.salary\\\" value=\\\"0\\\" placeholder=\\\"Enter your Salary\\\"></ion-input>\\n        </ion-item>\\n        <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" fill=\\\"solid\\\" type=\\\"submit\\\">Guardar</ion-button>\\n        <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" fill=\\\"solid\\\" (click)=\\\"resetForm(employeeForm)\\\">Limpiar</ion-button>\\n      </form>\\n    </ion-card>\\n    <ion-item *ngFor=\\\"let employee of employeeService.employees\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img src=\\\"../../../assets/imgs/thumbal.jpg\\\">\\n        </ion-avatar>\\n        <ion-label>\\n          {{ employee.name }}\\n        </ion-label>\\n        <p>{{ employee.position }}</p>\\n        <p>{{ employee.office }}</p>\\n        <a (click)=\\\"editEmployee(employee)\\\">\\n            <i class=\\\"material-icons\\\">edit</i>\\n          </a>\\n          <a (click)=\\\"deleteEmployeeAlert(employee._id, employeeForm)\\\">\\n            <i class=\\\"material-icons\\\">delete</i>\\n          </a>\\n    </ion-item>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYnMvdGFiNC90YWI0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { EmployeeService } from '../../services/employee.service';\nimport { NgForm } from '@angular/forms';\nimport { Employee } from '../../models/employee';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-tab4',\n  templateUrl: './tab4.page.html',\n  styleUrls: ['./tab4.page.scss'],\n})\nexport class Tab4Page implements OnInit {\n\n  constructor(private employeeService: EmployeeService,\n              public toastController: ToastController,\n              public alertController: AlertController) { }\n\n  ngOnInit() {\n    this.getEmployees();\n  }\n\n  //Toast\n  async presentToast() {\n    const toast = await this.toastController.create({\n      position: 'top',\n      color: 'dark',\n      message: 'Your settings have been saved.',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  addEmployee(form?: NgForm) {\n    console.log(form.value);\n    if(form.value._id) {\n      this.employeeService.putEmployee(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          this.getEmployees();\n          this.presentToast();\n        });\n    } else {\n      this.employeeService.postEmployee(form.value)\n      .subscribe(res => {\n        this.getEmployees();\n        this.resetForm(form);\n        this.presentToast();\n      });\n    }\n    \n  }\n\n  getEmployees() {\n    this.employeeService.getEmployees()\n      .subscribe(res => {\n        this.employeeService.employees = res as Employee[];\n      });\n  }\n\n  editEmployee(employee: Employee) {\n    this.employeeService.selectedEmployee = employee;\n  }\n\n  deleteEmployee(_id: string, form: NgForm) {\n    if(confirm('Are you sure you want to delete it?')) {\n      this.employeeService.deleteEmployee(_id)\n        .subscribe(res => {\n          this.getEmployees();\n          this.resetForm(form);\n          this.presentToast();\n        });\n    }\n  }\n\n  //Delete employed\n  async deleteEmployeeAlert(_id: string, form: NgForm) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message: 'Message <strong>text</strong>!!!',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Okay',\n          handler: () => {\n            console.log('Confirm Okay');\n            this.employeeService.deleteEmployee(_id)\n        .subscribe(res => {\n          this.getEmployees();\n          this.resetForm(form);\n          this.presentToast();\n        });\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n      this.employeeService.selectedEmployee = new Employee();\n    }\n  }\n\n}\n"],"sourceRoot":""}